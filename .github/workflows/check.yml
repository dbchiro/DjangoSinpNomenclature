# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: "ðŸŒˆ Code quality"

on:
  push:
    # branches: [ $default-branch ]
    branches: [$default-branch, "dev"]
  pull_request:
    branches: [$default-branch]

jobs:
  check-syntax-lints-type:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]

    steps:
      #-----------------------------------------------
      #  -----  checkout repo and set-up python  -----
      #-----------------------------------------------
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run image
        uses: abatilo/actions-poetry@v3
      #------------------------------------
      #  -----  Install dependencies  -----
      #------------------------------------
      - name: Install dependencies
        run: |
          sudo apt update && sudo apt install -y libgraphviz-dev
          poetry install --all-extras
      #------------------------------
      #--------  run isort  ---------
      #------------------------------
      - name: Format check with isort
        run: poetry run isort --check sinp_organisms --profile black
      #------------------------------
      #--------  run black  ---------
      #------------------------------
      - name: Format check with black
        run: poetry run black --check sinp_organisms
      #--------------------------------
      #--------  run linters  ---------
      #--------------------------------
      # - name: Run linters
      #   run: poetry run pylint sinp_organisms

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings.
          flake8 . --count --exit-zero --statistics
      #-----------------------------
      #--------  run build  ---------
      #-----------------------------
      - name: Test build
        run: poetry build
